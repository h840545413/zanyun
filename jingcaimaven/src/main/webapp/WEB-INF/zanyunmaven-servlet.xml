<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 解决IE下请求返回json数据会提示下载 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
		p:ignoreDefaultModelOnRedirect="true">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" p:supportedMediaTypes="*/*" />
			</list>
		</property>
	</bean>
<!-- 这个解决了 @ResponseBody 返回JSON 报 406 错误的问题 -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<value>
				atom=application/atom+xml
				html=text/html
				json=application/json
				*=*/*
			</value>
		</property>
	</bean>

	<!-- 添加json 支持 (上面两组配置和这个可以实现相同的功能) <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list > <ref bean="mappingJacksonHttpMessageConverter" 
		/> </list> </property> </bean> <bean id="mappingJacksonHttpMessageConverter" 
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>application/json;charset=UTF-8</value> 
		</list> </property> </bean> -->


	


	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
	</bean>

	<!-- 异常处理视图定义 <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="com.talent.base.domain.UserException">error</prop> 
		</props> </property> </bean> -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="102400000" />
	</bean>
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- spring 自动扫描 (只加入控制层扫描，否则事务将失效) (!!!! 控制层扫描一定 要与其他层分开配置，否则事务失效 !!!!) -->
	<!-- use-default-filters="false" 是不默认扫描方式， 不加个， 扫描的项目是 com.talent 下的所有有注解的类 -->
	<context:component-scan base-package="com.zanyun" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 这个解决了 @ResponseBody 返回乱码的问题哦 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
		
	<!-- 默认的注解映射的支持 -->  
	</mvc:annotation-driven>
	<mvc:default-servlet-handler/>
	 <!-- 拦截器 -->    
	 <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/css/**"/>  
			<mvc:exclude-mapping path="/images/**"/>  
			<mvc:exclude-mapping path="/img/**"/>  
			<mvc:exclude-mapping path="/js/**"/>  
			<mvc:exclude-mapping path="/swf/**"/>
			<mvc:exclude-mapping path="/theme/**"/>  
			<mvc:exclude-mapping path="/upload/**"/> 
			<mvc:exclude-mapping path="/bootstrap/**"/>    
		 	<bean class="com.zanyun.common.interceptors.HandlerInterceptor" /> 
		</mvc:interceptor>
	</mvc:interceptors> 
	
	<!-- 访问静态资源，不拦截 -->
<!-- 	<mvc:resources location="/css/" mapping="/css/**" cache-period="31556926" />
	<mvc:resources location="/images/" mapping="/images/**" cache-period="31556926" />
	<mvc:resources location="/js/" mapping="/js/**" cache-period="31556926" />
	<mvc:resources location="/swf/" mapping="/swf/**" cache-period="31556926" />
	<mvc:resources location="/theme/" mapping="/theme/**" cache-period="31556926" />
	<mvc:resources location="/upload/" mapping="/upload/**" cache-period="31556926" /> -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/swf/" mapping="/swf/**" />
	<mvc:resources location="/theme/" mapping="/theme/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:resources location="/bootstrap/" mapping="/bootstrap/**" />

	
	<!-- <context:component-scan base-package="com.guohualife.lis"/> <context:component-scan 
		base-package="com.guohualife.platform"/> <context:component-scan base-package="com.guohualife.ebiz"/> 
		<context:component-scan base-package="com.guohualife.ebiztel"/> <context:component-scan 
		base-package="com.guohualife.mobile"/> -->
</beans>